mediaType=application/vnd.ims.lti.v2.ToolSettings+json
mediaTypeURI=http://www.imslobal.org/lti/v2p0/media/application/vnd/ims/lti/v2/ToolSettings+json/index.html
rdfType=http://purl.imsglobal.org/vocab/lti/v2/lti#ToolSettingsContainer
contextURI=http://purl.imsglobal.org/ctx/lti/v2/ToolSettings
contextRef=[LTI, 12 TS]
title=Tool Settings in the <code>application/vnd.ims.lti.v2.ToolSettings+json</code> format.
graphTypes=\
  http://purl.imsglobal.org/vocab/lti/v2/lti#LtiLink \
  http://purl.imsglobal.org/vocab/lti/v2/lti#ToolProxyBinding \
  http://purl.imsglobal.org/vocab/lti/v2/lti#ToolProxy\
  
status=IMS Working Draft

abstract= \
  In the IMS LTI standard, a Tool may attach settings to certain resources \n\
  within the Tool Consumer system.  This specification defines a JSON \n\
  representation for those Tool Settings.\n\
  
editors=\
  Colin Smythe, IMS Global Learning Consortium  \n\
  Mark McKell, IMS Global Learning Consortium  
  
authors= \
  Greg McFall, Pearson        \n\
  Lance Neumann, Blackboard   \n\
  John Tibbetts, VitalSource  \n\
  Stephen Vickers, IMS Global Learning Consortium \n\
  
  
ToolProxyBinding.includes=http://purl.imsglobal.org/vocab/lti/v2/lti#custom
LtiLink.includes=http://purl.imsglobal.org/vocab/lti/v2/lti#custom
ToolProxy.includes=http://purl.imsglobal.org/vocab/lti/v2/lti#custom

  
introduction= \
  In the IMS LTI standard, a Tool may attach settings to certain resources \n\
  within the Tool Consumer system.   Tool Settings may be attached  \n\
  to an individual LTI link, to \n\
  the learning context within which the link is used, or at a system-wide scope.  \n\
  Link-level Tool Settings are stored within the link itself.  \n\
  Context-level Tool Settings are stored within a <code>ToolProxyBinding</code>. \n\
  System-level Tool Settings are stored within the <code>ToolProxy</code>. \n\
  This specification defines a JSON representation that can provide details about \n\
  Tool Settings within a single container or all the relevant containers.
  
sampleText=<p>When accessing settings via the REST API [LTI, 12 TSS], a client may specify whether \n\
  the response should provide settings from one particular container or all relevant containers. \n\
  The example in Figure 1 shows Tool Settings from three containers:\n\
  <code>LtiLink</code>, <code>ToolProxyBinding</code>, and <code>ToolProxy</code>. </p>\n\
  <p>\n\
  The various containers are nested within an array labeled by the <code>@graph</code> \n\
  property.  The type of each container is specified by the \n\
  <code>@type</code> property, and the REST endpoint for the container itself is specified by \n\
  the <code>@id</code> property.  Thus, in Figure 1, the REST endpoint for the <code>LtiLink</code> \n\
  is given by:</p>\n\
  <pre>      http://tc.example.com/resources/LtiLink/17001\n\
  </pre>\n\
  <p>\n\
  For any given container, tool settings are accessed through the <code>custom</code> property \n\
  which takes an object as its value.  The <code>@id</code> \n\
  property within the <code>custom</code> object specifies the REST endpoint for the tool settings \n\
  (as opposed to the endpoint for the parent container). In Figure 1, the REST endpoint for the \n\
  link-level settings is given by:</p>\n\
  <pre>      http://tc.example.com/resources/LtiLink/17001/custom\n\
  </pre>\n\
  <p>A client may read or update the settings by issuing an HTTP GET or PUT request at this \n\
  endpoint in accordance with [LTI, 12 TSS].\n\
  </p>
 

[LTI,&nbsp;12&nbsp;TSS]=Greg McFall, Lance Neumann, Stephen Vickers, John Tibbetts| Tool Settings Service| Working Draft, October 2013| IMS Standard| \
  URL: ???