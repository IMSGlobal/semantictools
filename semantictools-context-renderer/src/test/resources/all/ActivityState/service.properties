rdfType=http://purl.org/pearson/paf/v1/vocab/core#ActivityState
mediaType=application/vnd.pearson.paf.v1.state+json

status=Pearson Working Draft
date=11 October 2012

introduction= \
  <p> An ActivityState resource records information about a learner's interaction with \n\
  some particular activity.  For example, it might record the learner's answer  \n\
  to an assessment question, or it might record the set of learning aids or tools that \n\
  are available to the learner, etc. This specification defines a REST API for creating, \n\
  reading, updating, and deleting <code>ActivityState</code>.\n\
  </p>\n\
  <p> The life cycle of Activity State can be summarized as follows:\n\
  <OL>\n\
    <LI> When a new <code>SequenceNode</code> is created, it is initialized with an empty \n\
         <code>ActivityState</code>.\n\
    <LI> The Activity Hub passes a so-called <code>NodeProcess</code> job the player's \n\
         backend preprocessor which may optionally add some data to the state.\n\
    <LI> The <code>SequenceNode</code>, now decorated with state, is passed to the player's \n\
         frontend in the browser or mobile device via the Activity Manager.\n\
    <LI> When the learner is done working on the activity, the state is updated to record any \n\
         responses that the user supplied, or other state changes. This exchange also is mediated \n\
         by the Activity Manager.  The Activity Manager may optionally specify what activity \n\
         should come next in the sequence (via the <code>nextActivity</code> or \n\
         <code>nextBinding</code> properties). Alternatively, the <code>computeNext</code> flag may \n\
         be set to <code>true</code> as a signal that the next activity should be computed \n\
         based on server side logic. \n\
    <LI> After the state is persisted, the Activity Hub invokes the player's backend postprocessor \n\
         to compute results, and then creates a new <code>SequenceNode</code> for the next activity. \n\
         Go to Step #1 and iterate.\n\
  </OL>
  

  
urlTemplates=\
  The URL for an <code>ActivityState</code> resource has the form:\n\
  <PRE style="margin-left: 2em; margin-bottom: 1em"> \n\
       https://content.api.pearson.com/resources/sequences/{guid}/node/{nodeIndex}/state \n\
  </PRE> \n\
  where <code>guid</code> is the globally unique identifier for the parent sequence, and\n\
  <code>nodeIndex</code> is the index that specifies the position of the node within the \n\
  sequence. 
  
  
GET.default.mediaType=application/vnd.pearson.paf.v1.node+json
  